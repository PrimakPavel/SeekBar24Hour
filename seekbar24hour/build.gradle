apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.PrimakPavel'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'seekbar24hour'

    publishedGroupId = 'com.pavelprimak'
    libraryName = 'SeekBar24Hour'
    artifact = 'seekbar24hour'

    libraryDescription = 'Page indicator for android ViewPager'

    siteUrl = 'https://github.com/primakpavel/SeekBar24Hour'
    gitUrl = 'https://github.com/primakpavel/SeekBar24Hour.git'

    libraryVersion = '1.0'

    developerId = 'primakpavel'
    developerName = 'Primak Pavel'
    developerEmail = 'pavl.primak@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    repositories {
        maven { url "https://maven.google.com" }
    }
    implementation 'com.android.support:support-annotations:27.1.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

